Nr;Titel des Projekts;AG Name;AG FG;Kurzbeschreibung;Art der Anwendung;Programmiersprache(n);Frameworks, Libraries, Tools;Lizenz
1;Interaction and Mobile Data Offloading with a Smartphone Application for Environmental Monitoring Networks;Julian Zobel;Multimedia Communications Lab (KOM);"In the LOEWE project Nature 4.0, nature and biodiversity is monitored by different sensors and devices. Within the densely forested area, cellular communication is not available to transport the huge amount of data out of the forest and into the databases of researchers and scientists. On the other side, the participation of citizens like schools, students, or hikers in the scientific process and the open presentation of gathered sensor data in the forest is highly desired. 

For both problems, we envision a smartphone application that is able to simultaneously (i) provide access to data on nearby/connected sensor devices and (ii) provide data offloading functionalities. In detail, requirement (i) allows the smartphone user to interact with the sensor device to view the data in a visual representation and potentially also contribute to the scientific process. For example, the device may request the user to take a picture of nearby tree crowns for the assessment of foliage and leaf colors, in addition to the camera the device uses itself, that is then uploaded to the sensor device. On the other hand, requirement (ii) runs mainly in the background and uses the smartphone to download and store excess data from the sensor box on the smartphone for data offloading. The data is then carried around until the smartphone is connected to a dedicated network, e.g. the Wi-Fi at the user's home, where the application transfers the data to the project servers. 

In this project, the development of the android smartphone application is in the focus. However, it also encompasses interaction and communication with wireless sensor devices on the one hand and databases on the other hand, both most probably realized on Raspberry Pis.";Android App, Serverbackend, Eingebettete Systeme, Lokal ausgeführte Software (Linux);C/C++, Java, Python, Sonstiges;;Open Source
2;Integrated Performance Exploration Toolsuite;Jan-Patrick Lehr;Scientific Computing;"We develop the performance exploration software PIRA (https://github.com/tudasc/pira), which can be used to explore performance characteristics of a high-performance computing application.
PIRA iteratively analyzes performance profiles of a target application, and heuristically decides which functions should be kept for subsequent measurements. It uses the Score-P measurement infrastructure and a custom-built LLVM plugin for instrumentation.

In the project, the existing software shall be made more accessible to users by implementing a web-technology-based frontend, a Slurm backend (used to submit compute jobs to the Lichtenberg HPC system), and a database to enable subsequent performance data mining. Furthermore, the metrics about the PIRA process and its inherent data structure of the PIRA analyzer, a whole-program call-graph, shall be visualized as a means to explore the performance data and the PIRA-process evolution.
In addition to the newly developed components, the existing software shall be improved through additional and better testing and documentation.

The project requires programming in Python3, and C++, plus whatever web technology is used.
The PIRA project is released under BSD 3-clause license, and the result of this project, if successful, shall be released as part of the PIRA project, i.e., same license. The students will be added to the project's contributors list.
The software is used in research, and will potentially be made available to users of the Lichtenberg HPC system.";Webanwendung, Kommandozeilenprogramm, Lokal ausgeführte Software (Linux);C/C++, Python;;Open Source
3;Entwicklung eines IoT-Gateways für das Energiedatenmanagement in der Cloud;Niklas Panten;PTW (FB16);"Für ein modernes industrielles Energiemanagement werden aus Produktionshallen laufend Zustands- und Messdaten von Maschinen und Versorgungsanlagen übertragen. Zur effizienten Verwalten sollen die Daten in einer AWS gehosteten Cloud-Plattform zusammengeführt werden. 
Im Rahmen des Praktikums soll eine IoT-Gateway Software entwickelt werden, die Daten aus der Produktion über verschiedene Protokolle in die Cloud übermittelt und Stellwerte aus der Cloud auf die Maschinen zurückschreiben kann.";Webanwendung, Lokal ausgeführte Software (Plattformunabhängig);Java, Javascript/Typescript/Coffeescript;Spring Framework, Apache Camel, Apache PLC4X, Apache Kafka, MQTT;Open Source
4;Design und Entwicklung eines flexiblen Buchungsprozesses für Zugangssysteme in  Book-n-Park.de;Torsten Uhlig;Multimedia Kommunikations / KOM;"Design & Implementierung eines Buchungsprozesses
- Als Schnellbuchung
- über Ortswahl (grafisch und textbasiert)
- für unterschiedliche Zugangssysteme (Parkbügel, Schranken, Fahrradboxen,..)
- für unterschiedliche Browser  (Firefox, Safari, Edge,..) auf verschiedenen Betriebssystemen (Windows, iOS, Android)
- für unterschiedliche Displaygrößen (responsive Design) 
- unter Berücksichtigung von Performance und Skalierbarkeit
- inklusive Design & Implementierung der Schnittstellen und Umsetzung der Business-Logik im Backend";Webanwendung, Serverbackend, Lokal ausgeführte Software (Linux);Javascript/Typescript/Coffeescript, PHP;HTML, REST, JSON, XML, VUE, cakePHP, SQL, gitlab, docker, swagger;Noch nicht entschieden
5;Web-based Exam & Exercise Management;Jannis Weil;Multimedia Kommunikation (KOM);Ziel des Projektes ist die Entwicklung einer Webanwendung zur Verwaltung von Klausur- und Übungsaufgaben für den Lehrbetrieb an der TUDa. Die Anwendung soll Funktionalitäten zur Erstellung (mittels LaTeX, ggf. mit Parametrisierung und Scripting) und Veränderung (inklusive Versionierung) von Aufgaben bieten. Eine Klausur oder Übung kann aus einer Auswahl an Aufgaben inklusive Unteraufgaben erstellt werden. Zur Unterstützung soll die Anwendung dabei eine Übersicht über die vorherige Verwendung der einzelnen Aufgaben und deren Ursprung visualisieren.;Webanwendung, Serverbackend;Javascript/Typescript/Coffeescript, Sonstiges;Node.js, React;Open Source
6;Collary;Felix Hild;Algorithmik;"Hochschulen veröffentlichen auf eigenen Seiten frei zugängliches Lernmaterial.

Bei diesem Projekt soll eine Webanwendung entwickelt werden, die das Lernmaterial aller  Hochschulen übersichtlich darstellt. Im Vordergrund steht dabei das innovative Design. Es erschafft eine spielerische, motivierende und einzigartige Lernplattform für jeden.

Das Konzept gewann auch beim E-Learning Ideenwettbewerb.";Webanwendung;Javascript/Typescript/Coffeescript, PHP;;Noch nicht entschieden
7;Szenario-Editor für Segelrobotik;Tatiana von Landesberger;GRIS;"Die Hochschulgruppe Sailing Team Darmstadt e. V. hat sich die Entwicklung eines Segelroboters für die unbemannte und autonome Überquerung des Atlantiks zur Aufgabe gemacht. Um das Verhalten des Segelroboters unter den oft chaotischen Bedingungen auf offenen Gewässern evaluieren zu können, bedarf es einer graphischen Software zum Erstellen, Bearbeiten und Verwalten von Szenarien in denen Aufgaben wie beispielsweise das Abfahren von Wegpunkten und das sichere Umfahren von Hindernissen erfüllt werden müssen. Das Ziel dieses Praktikums ist es, eine solche graphische Benutzeroberfläche zu erarbeiten. Zur Programmierung der Software kann sich das Team frei für eine der gängigen Sprachen wie C++, Python oder JavaScript entscheiden.

Mindestanforderungen:
• Szenarien können in einer einfachen Datei benannt, gespeichert und geladen werden
• Die folgenden Parameter können festgelegt werden
– Windstärke
– Windrichtung
– Die zur Verfügung stehende Zeit
– Startposition des Segelroboters
– Startpositionen, Endpositionen und Fahrtgeschwindigkeiten beliebig vieler weiterer Schiffe
• Hindernisse in Form von Polygonen können in die Karte eingezeichnet werden
• Sämtliche Operationen können vom Nutzer mithilfe graphischer Elemente durchgeführt werden
• Es können Zielpunkte die vom Segelroboter erreicht werden müssen in die Karte eingefügt werden
• Die Hindernisse und Parameter werden grafisch dargestellt";Webanwendung, Lokal ausgeführte Software (Plattformunabhängig), Sonstiges;C/C++, Javascript/Typescript/Coffeescript, Python, Flexibel;Ihr seid hier recht frei bei der Umsetzung!;Open Source
8;MSIL-Frontend für Programmanalyseframework Soot;Steven Arzt;Secure Software Engineering (SSE);"Softwaresicherheit ist ein zentraler Baustein jedes IT-Sicherheitskonzepts. Auch wenn ein Netzwerk gut abgesichert ist, physikalische Sicherheit hergestellt ist, usw., können Angreifer immer noch Sicherheitslücken in Software ausnutzen, um schadhaftes Verhalten auszulösen. Moderne Software ist allerdings zu groß, um sie bei jeder Änderung / Erweiterung per Hand prüfen zu können. Folglich sind automatisierte Werkzeuge zur Schwachstellensuche erforderlich. Solche Werkzeuge basieren i.d.R. auf bekannten Analyseframeworks, die Basisdienste für die Codeanalyse anbieten. Soot [1] ist ein solches Framework. Auf diesem Framework basieren nicht nur Produkte, sondern es wird auch Forschung in diverse Richtungen betrieben, z.B. Datenflussanalyse, Value Analysis, Callgraphs, Pointer-Analyse usw. Es ist also ein sehr zentraler Baustein im SE-Bereich und dort eines der beiden großen / verbreiteten Frameworks.

Derzeit besitzt Soot Frontends für Java und Android, d.h. man kann Java-Binaries und Android-Binaries analysieren. In der Praxis wird jedoch auch .net-Code eingesetzt (C#, VB.net, usw. – ist alles dasselbe Framework) zu haben. Dazu gibt es schon erste Arbeiten [2], aber keine wirklich benutzbare Implementierung. Zudem ist noch etwas konzeptionelle Arbeit notwendig, weil .net mittlerweile Konzepte hat, für die man das Java-basierte Soot-Objektmodell sowie Soots Zwischensprache Jimple erweitern muss. Eingelesen werden sollen .net Binaries in Zwischensprache ist MSIL, welche dann nach Jimple transformiert wird. Im Idealfall lassen sich bestehende, auf Jimple basierende, Analysen teilweise oder vollständig wiederverwenden.

Aufgaben im BP sind:

*	Features der MSIL (Binärsprache von .net) sammeln
*	Abgleich zwischen MSIL-Features und dem Soot-Objektmodell
*	Erweiterung des Soot-Objektmodells
*	Implementierung eines Parsers für MSIL nach Objektmodell (vermutlich erfordert das auch schon die eine oder andere Transformation) 
*	Implementierung einer beispielhaften Sicherheitsanalyse, z.B. Suche nach unsicherer Krypto in .net-Anwendungen
*	Dokumentation und Code hübsch machen, damit man es zu Soot contributen kann

Ideal sind Studierende mit Erfahrung im Compilerbau (z.B. die entsprechende Vorlesung) oder formale Sprachen / Programmiersprachtheorie.

[1] https://github.com/soot-oss/soot";Kommandozeilenprogramm, Lokal ausgeführte Software (Plattformunabhängig), Sonstiges;C#, Java;Soot;Open Source
9;KalkulierbaR: Gamification of the Calculi in Automated Theorem Proving;Lukas Grätz;Software Engineering;"In den letzten 30 Jahren sind sehr schnelle Automatische Theorembeweiser für Logik 1. Stufe entstanden. Allerdings sind die zahlreichen verwendeten logischen Kalküle und Beweisprozeduren oft komplex und müssen für die Lehre erst anschaulich gemacht werden. Daher wurde Im Zuge des letzten Bachelorpraktikums wurde die App ""KalkulierbaR"" (http://kbar.app) zur Gamifikation von Kalkülen entwickelt. Die App ist sauber in Kotlin und NodeJS implementiert und bietet viele Ansatzpunkte für Erweiterungen. Die kleine App konnte im vergangenen Semester das selbstständige Lernen der Studierenden und die Vorlesung Automated Theorem Proving (ATP) unterstützen.

Ziel dieses Softwareprojekts ist die Erweiterung der App in alle Richtungen. Das Framework soll für die Unterstützung von weiteren Kalkülen erweitert werden, auch Kalküle für Modallogik lassen sich realisieren. Es soll eine Schnittstellen in die TPTP Infrastruktur entwickelt werden. Für die Automatisierung ist die Implementierung von Strategien und Beweisprozeduren hilfreich. Die Frontend ist für die Gamification der App essentiell, die Verbesserung der Interaktion in den Beweisstrukturen der neuen und alten Kalküle hat hohe Priorität. Eine kleine Beweis-Challenge wäre ein krönender Abschluss für das Projekt, vorausgesetzt, die GUI ist dazu bis dahin in der Lage.";Webanwendung;Javascript/Typescript/Coffeescript, Sonstiges;Kotlin, NodeJS;Open Source
10;BotOrchestrator 2.0;Shankar Karuppayah;Telecooperation;"This project is a followup of a previous (successful!) Bachelorpraktikum project. 

This project which is codenamed BotOrchestrator is a web-based (backend+frontend) project that communicates with a well-known open source tool called Cuckoo Sandbox. Basically, we are leveraging API-access that is offered by Cuckoo to carry out malware analysis before deciding to change certain parameters prior to subsequent analysis of the same malware.

In that process, BotOrchestrator is able to offer features that are not primitive to Cuckoo but very useful in the domain of P2P botnet/malware analysis and monitoring. Some of the features include on-the-fly network reconfiguration of the virtual machines that are used for malware analysis.

In this iteration of Bachelorpraktikum, we are excited to offer a follow up of this project that aims to extend and improve some of the features of BotOrchestrator.

If you are interested in a project that is both interesting and challenging, this might be the one for you. If you are interested to know more about the project, please feel free to contact me at karuppayah@tk.tu-darmstadt.de.";Webanwendung, Serverbackend;Javascript/Typescript/Coffeescript, Python, Sonstiges;Vue.js (Frontend), Django (Backend);Not decided yet
11;Metadatenextraktion für das Entwickeln und Testen einer automatisierten Mercedes S-Klasse;Clemens Linnhoff;Fachgebiet Fahrzeugtechnik (FZD);In diesem Projekt sollen Metadaten aus Messungen eines autonomen Fahrzeugs des aDDa-Projekts automatisiert extrahiert werden. Diese Metadaten können z.B. die während der Messung aufgezeichneten Sensoren sein, Umweltbedingungen, die durch einen Wettersensor aufgezeichnet werden, oder die gefahrene Trajektorie des Fahrzeugs als GPS-Punkte. Diese Metadaten sollen dann in einer bestehenden SQL-Datenbank gespeichert und auf einer ebenfalls schon bestehenden Weboberfläche in einer übersichtlichen und intuitiven Art dargestellt werden.;Webanwendung, Serverbackend, Lokal ausgeführte Software (Linux);PHP, Python;;Intern
12;Machine Learning Tool zur Auswertung von industriellen Produktionsdaten;Thomas Weber;Maschinenbau;Ziel des ausgeschriebenen Projekts ist es ein bestehendes Python Tool zur Identifizierung von Machine Learning Pipelines (Regressoren) als Webanwendung umzubauen und damit interaktiver zu machen. Während in der aktuellen Form des Tools festgelegte Datenvorverarbeitungssequenzen einmal definiert werden und lediglich das Regressionsergebnis des Tools an einen Nutzer zurückgegeben wird, soll in der Webanwendung der User die Möglichkeit bekommen die Verarbeitung der Daten interaktiv zu beeinflussen und sich die Daten während des gesamten Datenverarbeitungsprozesses visualisieren zu lassen. Ziel ist es, dem Datenanalysten tiefere Einblicke in den Datenverarbeitungsprozess zu geben und diesen damit effizienter zu gestalten. Besonders für die wissenschaftliche Auswertung von industriellen Energiedaten, die in vielen Fällen eine unzureichende Qualität aufweisen, bietet die transparente Verarbeitung der Daten wichtige Erkenntnisse hinsichtlich des Erfolgs bzw. Misserfolgs von Machine Learning Anwendungen in der Industrie.;Webanwendung;Javascript/Typescript/Coffeescript, Python;Angular, pandas, numpy;Open Source
13;BARobot - Mojito, Caipirinha, Sex on the Beach;Tanja Steinbach;Fachgebiet Datenverarbeitung in der Konstruktion;"Am DiK haben wir eine Roboter IDE (CoBot) nach dem Vorbild verschiedener BARbots aufgebaut. Gerne möchten wir, dass eine Collaboration zwischen dem Menschen und der Roboter Umgebung remote durchgeführt werden kann.

Wir suchen interessierte Studierende, die das Projekt weiter ausbauen. Das Arbeiten und Ausleihen der Hardware gemäß den Hygienevorschriften der TUDa wird gewehrleistet.";Webanwendung, Lokal ausgeführte Software (Plattformunabhängig), Lokal ausgeführte Software (Windows), Sonstiges;C/C++, C#, Python, Flexibel;;Open Source
14;Computergestütztes Design von Linsensystemen und optischen Resonatoren;Thorsten Führer;Angewandte Physik;"Weiterentwicklung einer Software zum Design von optischen Resonatoren bzw. Laser-Resonatoren sowie Linsensystemen.
Die verwendete mathematische Methode basiert auf einfacher Matrizenrechnung mit 2x2-Matrizen (ABCD-Matrix Formalismus). Neben der Benutzeroberfläche liegt ein Schwerpunkt auf der computergestützten Auswahl eines Resonators unter Vorgaben von diversen Parametern wie z.B. des gewünschten Strahldurchmessers oder äußeren 
Abmessungen sowie der automatischen Auswahl und Anordnung von Linsen zur sog. Modenanpassung.
Dazu bieten sich globale Optimierungsverfahren an. Möglicherweise sind auch Methoden des Machine Learning anwendbar.";Lokal ausgeführte Software (Plattformunabhängig);Java, Flexibel;;Open Source
15;"Realisierung eines Dokumentenmanagement-Systems als Cloud-Service""";Wolfgang Heenes;Dekanat;"Im Rahmen des Praktikums soll ein Dokumentenmanagement-Systems als Cloud-Service realisiert werden.

Basierend auf der Plattform Nextcloud (ownCloud) soll prototypisch die „Fachanwendung Dokumentenmanagement-System“ geplant und realisiert werden.

Für eine bessere Nachnutzung soll die Umsetzung mit einem Unified Process erfolgen.";Webanwendung;Flexibel;;Open Source
16;GUI für Gehirnsimulation;Fabian Czappa;Parallele Programmierung;"Im Rahmen des BP soll eine GUI für die bereits bestehende Gehirnsimulation entwickelt werden. Es sollen die Graphen angezeigt werden können, Werte beobachtet und Modelle konfiguriert werden können.
Die gesamte Simulation existiert bereits; Die Schnittstelle kann beliebig einfach ausfallen.";Lokal ausgeführte Software (Plattformunabhängig);C/C++, Flexibel;MPI;Open Source
17;Privatsphärenerhaltendes Stadtmodell mit Ereignishervorhebung (in Virtual Reality);Julius von Willich;Telecooperation Lab (TK);"In diesem Projekt geht es darum, eine interaktive, modellbasierte Version Darmstadts zu erstellen. Es sollen aus externen Datenquellen (z.B. .csv) unter Anderem bewegte Passanten, Autos oder Fahrräder ""eingelesen"" und mit passenden Modellen repräsentiert werden.  Die Modelle sollen hierbei austauschbar sein, um verschiedene Detailgrade der selben Szene darstellen zu können. Beispielsweise von einer Boundingbox über ein generisches Modell zu einem detailreichen Modell.
Nutzer sollen dieses Modell in Virtual Reality betrachten, und die ""Wiedergabe"" der Szenen steuern können, also vorspulen, zurückspulen, zu Zeitpunkten springen. Desweiteren sollen Nutzer sich in der Szene bewegen können und Ereignisse, welche auch von externen Datenquellen bereitgestellt werden, sollen passend dargestellt/hervorgehoben werden. (z.B. Sturz einer Person).";Lokal ausgeführte Software (Linux), Lokal ausgeführte Software (Windows);C#;Unity3D, SteamVR;Noch nicht entschieden
18;Altklausuren-Lernportal für den FB Medizin der Goethe-Uni;Guido Rößling;Studiendekanat;"Im Projekt soll die bisherige Lernplattform der Medizin an der Goethe-Uni Frankfurt abgelöst werden. Das System ermöglicht das Bearbeiten alter Multiple-Choice Klausuren aus den verschiedenen Fachrichtungen der Medizin durch Auswahl der Fächer, Ankreuzen der Antworten und Feedback.
Neben dem Import der Altdaten ist eine vernünftige Webanwendung zu entwickeln (Sessions, taugliches UI/UX, Benutzerverwaltung, Diskussionsfunktion). Vorwissen in passenden Technologien und Frameworks ist hilfreich oder muss sonst im Rahmen des BP erworben werden.";Webanwendung;Flexibel;;Open Source
19;NLP Visualizer - Displaying and Analyzing Big Data;Ji-Ung Lee;UKP;The goal of this project is to develop a web application in Python that can display state of the art NLP models and data. This allows researchers to easily analyze their used data and detect potential bugs early.;Webanwendung;Python;Django, Scikit Learn, Numpy;Open Source
20;Betreuungshilfe für studentische Arbeiten;Florian Stock;ESA;"Für Abschlussarbeiten gibt es einen ""üblichen"" Prozeß: Aufgabe formulieren, aushängen, Studenten betreuen, bewerten und finales Gutachten erstellen.

Das Tool soll eine Anwendung für Mitarbeiter realisieren, die Mitarbeiter bei der Betreuung von Arbeiten unterstützt. D.h. es soll eine Oberfläche geben, bei der z.B. eine Aufgabenstellung zentral eingegeben werden kann, und daraus sowohl Aushänge als auch Webseitentext generiert werden, danach soll der Betreuer dann die Oberfläche benutzen, um Notizen zur Betreuung zu verwalten (z.B. Vereinbarungen, Änderungen der Aufgabenstellung, Probleme,...), den Status zu tracken (Angemeldet, Abgegeben, Vortrag gehalten, Bewertet, ...), ein Bewertungsschema zu verwalten, und ein Template zur Erstellung des Gutachtens zu nutzen (Briefkopf ...).

Die zu erstellende Software soll eine einfache Oberfläche bieten, und von mehreren Nutzern als Webservice benutzbar sein. Die Speicherung soll dabei in einer Standarddatenbank (Mysql, Postgress, ...) stattfinden, und bei der Text-Generierung  (Aushänge) soll Latex benutzt werden.";Webanwendung, Serverbackend, Sonstiges;Java, Sonstiges;Latex, SQL;Intern
21;Bewertungsdienst LAMBDA V2;Julian Prommer;Hochschuldidaktische Arbeitsstelle - ELearning + FG Algorithmik;"An der TU Darmstadt wird seit Sommer 2019 ein TU-eigenes Prüfungssystem entwickelt. Es ist in verschiedene einzelne Webservices zerlegt. Einer der Dienste ist LAMBDA. Mit Lambda können Papierprüfungen und computergestützte Prüfungen bewertet werden.
Der Dienst soll überarbeitet und erweitert werden durch ein BP-Team.
Version 1 geht aktuell in den Feldtest über.
Version 2 soll Verbesserungen an der Code-Base erhalten und Erweiterungen wie OCR für Matrikelnummern, Stifteingaben für Bewertungen und Kommentare, mehr Automatische Bewertung, Umgestaltung zu Cloudsoftware, weitere Verbesserungen...";Webanwendung, Android App, Serverbackend, iOS App;Java, Javascript/Typescript/Coffeescript, Sonstiges;Bootstrap, Typescript, Angular 8, PostgresSQL;Intern
22;Prüfungsaufsichtstools;Julian Prommer;Hochschuldidaktische Arbeitsstelle - Elearning  + FG Algorithmik;"Für das TU-eigene Prüfungssystem werden benutzerfreundliche und effiziente Aufsichtstools gebraucht.
Für Papierprüfungen sollen voraussichtlich in einer App mit Anbindung an einen Prüfungsarchitekturdienst Matrikelnummerlisten mit Suchfunktion geladen werden und nach der Prüfung an die Prüfungsleitung weitergeleitet werden. Weitere Funktionen sind geplant.
Für computergestützte Prüfungen in Präsenz ist eine App oder Webdienst geplant der mit dem Prüfungsdurchführungsdienst im Austausch steht und der Prüfungsleitung live Rückmeldung liefert.
Für online Prüfungen von zuhause werden insbesondere Dienste gebraucht, die sicherstellen, dass die Person vorm Computer überhaupt der erwartete Prüfling ist.";Webanwendung, Android App, Serverbackend, iOS App;Java, Javascript/Typescript/Coffeescript;Angular 8, Typescript, Bootstrap, PostgresSQL, WebRTC,...;Intern
23;Virtual Reality Rettungsroboter Leitstand;Stefan Fabian;"Simulation, Systemoptimierung und Robotik; Telecooperationlab";In diesem Projekt geht es darum, einen oder mehrere Rettungsroboter interaktiv zu steuern und dabei Sensordaten sowie das Robotermodell in VR zu visualisieren. Das VR-System soll sowohl an die echte Roboterhardware als auch an die bereits existierende ROS-Simulation angebunden werden. Hierbei soll die Visualisierung und Steuerung für verschiedene austauschbare Robotersysteme nutzbar sein.;Lokal ausgeführte Software (Linux), Lokal ausgeführte Software (Windows);C/C++, C#;Unity (C#) or Unreal Engine (C++), ROS, SteamVR;Internal
24;Hand Gesture Recognition for Robot Control;Dorothea Koert;IAS;"In this project the students should implement a hand gesture recognition module using a hand-tracking-camera (https://www.ultraleap.com/). As an example application for the use of recognized gestures the students should implement a small task to control a humanoid robot. A simulation environment for the robot and control interfaces are provided. The group will be given 2 LEAP Motion cameras at the project start which they can then use at home.
Depending on the group progress and corona situation there might in the end be an option to test the developed software on the real robot. However, during the project the group will be able to fully work in simulation.";Lokal ausgeführte Software (Linux);C/C++, Python, Flexibel;;Open Source
25;Geschichte vernetzt - APP in die Geschichte;Miriam Grabarits;FB 02 - Institut für Geschichte, Arbeitsgebiet Geschichtsdidaktik;"Für die Lehrveranstaltung ""Geschichte vernetzt"" (verortet in der Lehramtsausbildung für das Lehramt für Gymnasien/Projektzugehörigkeit MintPLUS2) wurde bereits im letzten BP-Durchgang eine Rundgang-APP zur Arbeit im Hessischen Landesmuseum Darmstadt entwickelt. Den Nutzer*innen der APP soll es möglich sein, eigene Rundgänge in der APP anzulegen, diese zu teilen und auch selbst Rundgänge zu gehen. Nun soll dieses Projekt fortgeführt werden - mit besonderem Fokus auf der zugehörigen Website, über die zentrale Elemente der APP (bspw. Verwaltung der Nutzer*innen, Edition der Exponatendatenbank, Nutzer*innen-Analysen...) gesteuert werden sollen. Dazu kann die bestehende Website weiterentwickelt oder auch ganz neu angelegt werden. Im Zuge dessen sind ggfs. auch Anpassungen am Backend und Design der APP selbst notwendig. Eine detaillierte Dokumentation des Projektes ist vorhanden und wird der Gruppe zur Verfügung gestellt. Näheres zum Projektstatus etc. siehe PPP.

Website zu Geschichte vernetzt: https://www.geschichte.tu-darmstadt.de/institut_fuer_geschichte_1/fach__und_arbeitsgebiete_ifg/geschichtsdidaktik/uebersicht_ifg_gedid/lehre_ifg_gedid/gesch_vern.de.jsp -";Webanwendung, Android App, Serverbackend, iOS App;Javascript/Typescript/Coffeescript, Python, Sonstiges;Flutter, Flask, React, Redux;Open Source
26;Programmieren der Regeltechnik einer Schaumfilmwaage (TPBP);Larissa Braun;Institut für Festkörperphysik, Soft Matter at Interfaces;"Die Steuer-, Mess- und Regelsoftware einer Schaumfilmwaage (Thin Film Pressure Balance, TFPB) soll neu programmiert werden. Erstes Ziel ist ein anwenderfreundliches Programm (z.B. eine GUI) welches die bidirektionale Kommunikation mit der Hardware herstellt, vom User vorgegebene Messprotokolle abarbeitet (Drücke einstellt und nachregelt) und Messdaten (gemessene Lichtintensitäten eines Photomultipliers) abspeichert. Die Kommunikation der einzelnen Komponenten beschränken sich dabei auf gut dokumentierte und weit verbreitete Protokolle (SCPI via RS232, USB Vision / Raw Bayer). Als Zweites Ziel soll die Kamera in das Programm integriert werden um, z.B bei Druckänderung Videos mitzuschneiden.
Eine fest vorgeschrieben Programmiersprache gibt es nicht, denkbar sind z.B. Python oder Matlab/Octave. Das Projekt richtet sich an Studierende, die Interesse an Hardwarekommunikation, Regelsoftware und älterer sowie neuerer Hardware haben. Es handelt sich nicht um ein reines „online-Software-Projekt“, da unterschiedliche Schnittstellen zu diversen Hardware-Messkomponten angesprochen werden müssen. Ein komplette Messaufbau mit allen beschriebenen Komponenten steht dem Projekt in S2|04 (gegenüber Piloti-Gebäude) zur Verfügung. Um den Hygienevorschriften zu genügen, kann der Aufbau entweder Remote oder in Präsenz (nach Absprache auch alleine im Labor) genutzt werden.";Kommandozeilenprogramm, Lokal ausgeführte Software (Windows);Matlab/Octave, Python, Flexibel;;Open Source
27;Revising the Explanations of Machine Learning Models via Webinterface;Cigdem Turan;Artificial Intelligence and Machine Learning Lab;Our work investigates whether and how humans can interact with black box Machine Learning Models in real-world tasks. In an interactive setting in which experts investigate the explanations of a learnt model and possibly give corrections, i.e. their explanations back to the model. This can be performed until the user agrees with the model’s explanations. This framework is considered Explanatory Interactive Learning (XIL). In this BachelorPraktikum, we are expecting you to develop a webinterface where the users could visualize the explanations of the machine learning models and also give feedback on the explanations.;Webanwendung;Javascript/Typescript/Coffeescript, Python, Sonstiges;Pytorch/Tensorflow to use Machine Learning models.;Not decided yet
28;Crowdinvesting World (Arbeitstitel);Sven Siebeneicher;Entrepreneurship;"#klimaschutz #crowdinvesting #energiewende #photovoltaik #gemeinschaftsfinanzierung #crowdfunding #entrepreneurship #freiraum

Eine kurze User-Story:
Felix hat vor einiger Zeit sein Studium an der TU-Darmstadt als Informatiker beendet. Nun hat er erstes Geld verdient - natürlich mehr als er selbst ausgeben kann. Nachdem er seine Kontoauszüge geprüft hat sieht er sich die Nachrichten im Fernsehen an, wo seine Euphorie schnell verfliegt. Die Vorhersagen über die Entwicklungen des Klimas und den wachsenden Ausstoß von CO2 machen ihm große Sorge. Felix sieht in der Umsetzung einer globalen Energiewende eine große Chance für den Klimaschutz. 
Weil Felix sein Geld sinnvoll anlegen möchte, erkundigt er sich über sogenannte ""grüne Investment-Fonds"". Doch an diesen Fonds stört ihn die Intransparenz und Anonymität: Was passiert mit dem Geld genau, an welche Unternehmen fließt es, was machen diese Unternehmen eigentlich wirklich mit dem Geld und überprüft überhaupt jemand, ob die Unternehmen wirklich nachhaltig sind? Obwohl er die klassischen Finanzanlagen weiterhin interessant findet, erkundigt er sich nach alternativen Investitionsmöglichkeiten. 
Felix möcht gerne in den Ausbau erneuerbarer Energien in seiner Region investieren. Außerdem fände er es praktisch, zu sehen, welchen Anteil er durch seine Investition an der Stromproduktion einer Anlage hat. Auf der Suche nach alternativen Investitionsmöglichkeiten, stolpert Felix im Internet über Crowdinvesting. Er findet unterschiedliche Webseiten, die ihm Investitionen in Photovoltaik-, Wind- und Biomasseanlagen vorschlagen und eine Rendite von 3-6 % versprechen. Das ist zwar etwas weniger als die Marktrendite, aber mehr als auf seinem Sparkonto und ungefähr so viel wie die Rendite für Immobilieninvestitionen. Leider sehen viele der Webseiten nicht modern aus und sind unübersichtlich: Es gibt viel Text zu lesen und unsaubere Grafiken, von einer langfristigen Leistungsstatistik der Anlage ganz zu schweigen und wo genau liegen die Projekte eigentlich? Noch in seiner Nähe, in Deutschland oder irgendwo im Ausland?
Dennoch findet Felix Crowdinvesting hoch interessant. Denn eines wird ihm klar: Crowdinvesting ermöglicht es einer breiten Gruppe von Menschen, sich über das Internet zu verbinden, ein gemeinschaftliches Projekt zu unterstützen und finanziell von der Investition zu profitieren. Darüber hinaus schafft Crowdinvesting in erneuerbare Energien nachhaltige Handlungsmöglichkeiten, sodass sich die Bevölkerung an der Energiewende beteiligen kann. Und von der Beteiligung der Bevölkerung reden ja immer alle. Denn Klimaschutz kann nur gemeinschaftlich funktionieren!
Felix lehnt sich im Stuhl zurück und denkt nach: Wie würde wohl die Crowdinvestingplattform aussehen, die er selbst entwickeln würde...

Praktikumsziel: 
Ziel ist die Entwicklung einer Crowdinvesting-Plattform als Web-Applikation, mit neuartigen Features, die einen interaktiven und spielerischen Ansatz verfolgen, wie z. B. 
- einer Online-Karte, die aktuelle und vergangene Projekte anzeigt,
- mit interaktiven Diagrammen, die Finanzflüsse und Stromproduktionen visualisieren,
- mit einem Einheitenrechner, um kWh auch in Kaffeetassen, Kilometer mit einem Elektroauto oder CO2-Ausstoß umrechnen zu können.
- ... es handelt sich hierbei um Vorschläge, die um eigene Ideen ergänzt werden können und sollen.
Im Zentrum soll die Entwicklung des Backends stehen. Das Ergebnis des Praktikums soll ein minimal funktionsfähiges Produkt (MVP, Minimal Viable Product) sein. Dieses MVP soll für Gespräche und wissenschaftliche Experimente mit Energieversorgen, Anlagen-Projektentwicklern usw. genutzt werden. Im Falle erfolgreicher Ergebnisse, soll eine echte Crowdinvesting-Kampagne umgesetzt werden. Ggf. wird auch eine kommerzielle Weiterentwicklung des Projektes angestrebt.

Motivation: 
Der Strombedarf wächst stetig an. Wenn wir so langsam weiter machen wie bisher, werden wir die Ausbauziele für erneuerbare Energien lange nicht erreicht und das 1,5-Grad-Ziel des Pariser Abkommens rückt in weite Ferne. Wir brauchen neue Geschäftsmodelle, die einer breiten Bevölkerung ökonomisch und ökologisch nachhaltige Investitionen ermöglichen - Crowdinvesting bietet eine Lösung. Teilnehmerinnen und Teilnehmer müssen keine Klimaschutz-Enthusiasten sein. Nachdem in einem ersten Schritt grundlegende Komponenten der Web-Applikation implementiert wurden, erhaltet ihr die Möglichkeit euren eigenen Ideen freien Lauf zu lassen. Wie würdet ihr am liebsten Crowdinvesting nutzen, um in erneuerbare Energien investieren?  

Gegeben:
Webseiten-Designs und Site-Map; Mapbox-Stil (selbst konfigurierbare Online-Karte); Python-Django als Backend-Framework wird vorgeschlagen (optional); API-für Wechselrichter-Schnittstelle als Datenquelle für die Stromproduktion einer Photovoltaik-Beispielanlage.

Ansprechperson bei Fragen:
Sven Siebeneicher, Fachgebiet Entrepreneurship, sven.siebeneicher@tu-darmstadt.de";Webanwendung, Serverbackend;Java, Javascript/Typescript/Coffeescript, PHP, Python, Flexibel;Python-Django (favorisierter Vorschlag), Mapbox, (siehe Anhang);Kommerziell
29;Storyline Layouting;Tatiana von Landesberger;GRIS;"Storylines sind graphiken, die Bewegungen und Kontakte von Personen auf mehreren Orten über Zeit darstellen. Sie zeigen wer, wann wo war und wann und wo sich Personen getroffen haben. In der Graphik werden Personen als Linen dargestellt, die von links nach rechts im Zeitablauf (xachse) sich zwischen Orten (y achse). Zwei Linien nahe aneinander zeigen Kontakte von Personen auf einem Ort. . Solche Graphiken sind sehr hilfreich bei der Verfolgung von Krankeitsverbreitungen und bei Verfolgung von Film oder Bucherzählungen (=story). Daher der Name Storylines. 

Storylines können die Verläufe von Krankeitsverbreitungen oder Film/Buchgeschichten nur dann gut darstellen, wenn sie gut lesbar sind. Zu viele Linienkreuzungen, lange Linien von oben nach unten, zu viele Schwungs in den Linien machen die Verfolgung der Linien und die Lesbarkeit von Kontakten sehr schwierig. Um dies zu vermeiden werden sogenannte Layouts benutzt. Die bestimmen wie Linien in der Graphik verlaufen. Layouts sind automatische Algorithmen die Daten über den Krankeitsverlauf oder Filmverlauf nehmen (wer, wann wo war) und es in Position der Linie (x, y position) verwandeln. Dies ist ein automatisches, iteratives Prozess. Da dies ein schwieriges Problem ist, gibt es viele Algorithmen um diese Positionierung /=layout zu bestimmen.

Ziel des Praktikums ist es
-	Mehrere Layouts zu implementieren
-	Deren Qualität (= Anzahl Kantenkreuzungen, ... sowie Laufzeit) auszuwerten
-	Ergebnisse in einer Web-basierter Applikation darstellen

Programmiersprachen:
-	C++, Python, oder OpenJDK für Layout, 
-	Javascript für Darstellung
- JSON Daten";Webanwendung, Kommandozeilenprogramm, Lokal ausgeführte Software (Linux);C/C++, C#, Java, Javascript/Typescript/Coffeescript, Python;;Open Source
30;Konzeption eines Werkzeugs zur einfachen Generierung und Darstellung digitaler Montageanleitungen für die Produktion;Christopher Stockinger;Institut für Arbeitswissenschaft (IAD);"Werkerführungssysteme stellen Montagemitarbeitenden Kontext-angepasste, digitale Montageinformationen bereit. Aufgrund der zunehmenden Individualisierung von Produkten und der damit einhergehenden Flexibilisierung der Produktion, werden diese Werkerführungssysteme zunehmend in der Praxis eingesetzt. Dann allerdings meist als umfassende Systeme, in denen das Anlegen der entsprechenden Informationen und Prozesse komplex und aufwändig ist.

Ziel dieses Projekts ist es daher, eine Applikation zu entwickeln, mit der diese Montageinformationen und Prozesse sehr einfach und intuitiv in ein Werkerführungssystem integriert werden können. Dafür soll ein festes Anzeigeschema für die Infromationen verwendet werden, das bereits am IAD entwickelt wurde. Mit der zu entwicklenden Applikation soll dieses Schema einerseits einfach mit neuen Montageinformationen befüllt werden können. Andererseits sollen leicht Infromationen aus bestehenden Dokumenten integriert werden können.";Webanwendung, Kommandozeilenprogramm, Lokal ausgeführte Software (Windows);Flexibel;;Noch nicht entschieden
31;Bringing Rational Activation Functions to Tensorflow and MXNET;Quentin Delfosse;AIML;"Our lab have developed learnable rational activation functions (PAU) lately that were benchmarked on supervised learning and Reinforcement Learning. 
These functions have provided great accuracy/score improvement to known algorithm. However, we are missing good Tensorflow and MXNET implementations of those functions. 
We are looking for people motivated to work at the core of Deep Learning framework, to improve the current implementation of Tensorflow and create one for MXNET, as well as implementing add-ons that would better help to estimate the advantages (and drawback) of this new technique.";Lokal ausgeführte Software (Plattformunabhängig);C/C++, Python;Tensorflow, MXNET, Cuda;Open Source
32;GPU-basiertes Fokus-Stacking;Michael Heethoff;Biologie;"Der in Darmstadt entwickelte Scanner DISC3D ermöglicht es präparierte Insektenexemplare als maßstabsgetreue 3D-Modelle in Echtfarben abzubilden. Der Scanner kombiniert dafür zwei Verfahren. Zum einen wird das „Structure from Motion“ Verfahren verwendet, welches bereits zum Digitalisieren von größeren Objekten zum Einsatz kommt. Durch die geringe Größe der Insekten erfolgen die Aufnahmen im Bereich der Makrofotografie. In der Makrofotografie haben die Aufnahmen jedoch eine geringe Schärfentiefe, wodurch nur ein kleiner Bereich des Insekts scharf abgebildet wird. Daher ist für eine scharfe Abbildung des gesamten Präparats die Aufnahme eines Focus-Stacks erforderlich. Beim Focus Stacking werden aus einer Serie von Bildern mit unterschiedlichen Objektschnittweiten die jeweils schärfsten Bildinhalte herausgefiltert und zu einem Bild mit erweiterter Schärfentiefe (EDOF-Bild) zusammengefügt. Die Berechnung des EDOF-Bildes ist aktuell in C++ auf der CPU unter Verwendung der OpenCV-Bibliothek umgesetzt. Dabei beträgt die Berechnungszeit von einem Stack mit 50 Bildern ungefähr 20 Sekunden. Das Ziel des Projekts ist es, die Berechnung des EDOF-Bildes auf der Grafikkarte (GPU) zu implementieren, um die Berechnungszeit soweit wie möglich zu verkürzen. Für die Berechnung des EDOF-Bildes lassen sich verschiedene Schärfemaße verwenden (z.B. Gradientenbetrag, Hochpassfilterung, Grauwertvarianz und Fouriertransformation). 
Damit das EDOF-Bild perspektivgetreu ist, ist es notwendig die Bilder des Focus-Stacks vor der eigentlichen Berechnung zu skalieren. Auch diese Transformation ist auf der GPU umzusetzen. Als Nebenprodukt der Berechnung des EDOF-Bildes ergibt sich ein Tiefenbild, welches angibt aus welcher Ebene des Focus-Stacks der Pixelwert entnommen ist.

Die Berechnungen sollen in der Programmiersprache C++ umgesetzt werden. Es wird freigelassen, ob dabei CUDA oder OpenCL verwendet wird. Die Verwendung von CUDA hat den Vorteil, dass OpenCV verwendet werden kann und damit der Projektaufwand geringer wäre. 

Um die Ergebnisse der GPU-Berechnung auf ihre Korrektheit zu überprüfen, sind alle Algorithmen auch zum Vergleich auf der CPU zu implementieren.";Lokal ausgeführte Software (Plattformunabhängig);C/C++;;Noch nicht entschieden
33;EBD Fahrzeugverwaltung;Felix Gündling;Algorithmik +  Eisenbahnbetriebsfeld Darmstadt (EBD);"'- Entwicklung eines Tools zur Verwaltung der Modellfahrzeuge mit Eigenschaften, Ersatzteilblättern, usw.
- Betriebsstunden- und Kilometerzähler
- Wartungserinnerung & -historie
- Einmessfunktion für die Geschwindigkeit der Fahrzeuge
- REST Schnittstelle für andere Systeme";Webanwendung;Java, Javascript/Typescript/Coffeescript;;Not decided yet
34;EBD Fahrstraßeneditor;Felix Gündling;Algo +  Eisenbahnbetriebsfeld Darmstadt (EBD);"Fahrstraße:
“Gesicherter Fahrweg aus Gleisen und Weichen von einem Signal zu einem Ziel”
Graphische Benutzeroberfläche zur Verwaltung der Fahrstraßen im EBD
Validierungsfunktionen
Im- und Export von Fahrstraßen";Webanwendung;Java, Javascript/Typescript/Coffeescript;;Not decided yet
35;Compiler für Semi-Private Function Evaluation;Daniel Günther;ENCRYPTO;"Secure Function Evaluation (SFE) erlaubt es zwei Parteien eine öffentliche Funktion f auf ihren privaten Eingaben x und y zu berechnen, ohne dass die Parteien etwas Anderes als den Output f(x,y) lernen (d.h. Informationen über die Eingaben der anderen Partei und Zwischenergebnisse werden nicht offenbart). Private Function Evaluation (PFE) erweitert SFE dadurch, dass die zu berechnende Funktion ebenfalls privat ist und von einer der zwei Parteien zur Verfügung gestellt wird. Da das verschleiern einer Funktion in einen sogennanten Universal Circuit (UC) die Funktion superlinear vergrößert, wird häufig der Kompromiss eingegangen, dass bestimmte Teile der Funktion öffentliche Information sein dürfen. Diese Art von PFE nennen wir Semi-Private Function Evaluation (SPFE).

Anwendungen für SPFE sind z.B. Smart Metering und Smart Cars. Ein Versicherungsunternehmen möchte seinen Kunden perfekt angepasste Tarife bieten, ohne dabei die sensiblen Daten der Kunden, die vom Smart Metering System oder Smart Car gesammt wurden, zu erfahren. Zusätzlich soll der Kunde keine Details von der Rechnungsgrundlage des Tarifs erfahren. Bestimmte öffentliche Informationen, z.B. dass ältere Fahrer günstigere Tarife erhalten, müssen dabei nicht zwangsläufig verschleiert werden, weswegen SPFE eine ideale Lösung für das Problem darstellt.

In diesem Projekt soll ein Compiler für ein SPFE Framework entwickelt werden. Mit diesem sollen öffentliche und private Teile der zu berechnenden ANSI-C Funktion markiert werden und in einem Boolean Circuit übersetzt werden. Für die Übersetzung von ANSI-C Code in einen Boolean Circuits gibt es bereits zuverlässige Frameworks, wie z.B. CBMC-GC. Die privaten Teile der Funktion sollen zusätzlich noch mit dem UC-Compiler in UCs übersetzt werden. Am Ende müssen alle einzelnen Teile zu einem Gesamtcircuit zusammengefasst werden.

Zusätzlich soll das ABY und MOTION Framework soweit angepasst werden, dass der generierte Circuit damit ausgewertet werden kann. Dies betrifft insbesondere die privaten Teile der Funktion.

Das langristige Ziel ist es, die Ergebnisse dieses Projektes auf einer internationel Top-Konfernz zu veröffentlichen.";Serverbackend;C/C++, Flexibel;ABY, MOTION, CBMC-GC, UC-Compiler;Open Source
36;Reportingplattform für Forschungsprojekte;Milan Stute;Sichere Mobile Netze;"Universitäre Forschungsprojekte müssen Buch über den aktuellen Forschungsstand und bereits erreichten Ziele führen. Das ist beispielsweise notwendig für die Projektsteuerung und um Statusberichte für den Geldgeber zu generieren.

Innerhalb dieses Bachelorpraktikums soll eine flexible Lösung zur Datenabfrage und -verwaltung entwickelt werden. Die Lösung soll später für das LOEWE-Zentrum emergenCITY genutzt, aber auch anderen Forschungsprojekten zur Verfügung gestellt werden.";Webanwendung;Flexibel;;Open Source
37;Lecture Recording Box;Florian Müller;Telecooperation Lab;"DE: Angesichts der aktuellen Situation um COVID-19 ist es besonders wichtig gute Vorlesungsaufzeichnungen anzubieten. Für coole Vorlesungsaufzeichnungen ist jedoch mehr als nur eine Tonspur erforderlich, wir brauchen: Getrennte Videos von Redner und Folien, Metadaten wie Zeitstempel für Folienwechsel zur Erzeugung von Sprungmarken und Miniaturbildern...

Im letzten Semester haben wir uns dafür ein fixes Studio aufgebaut. Dieses soll in diesem Projekt um die Möglichkeit der Aufnahme von eigenen Geräten aus erweitert werden. Dazu soll ein System entstehen, welches als externes HDMI Display agiert und sich um die Aufzeichnung und Weiterverarbeitung der Aufnahmen kümmert (Details siehe Folien).

ENG:Considering the current situation around COVID-19 it is especially important to offer good lecture recordings. But for good lecture recordings more than just a voice track is required, we need: Separate videos of speaker and slides, meta data such as timestamps for slide changes to create jump markers and thumbnails...etc.

Last semester we built up a fixed studio for this purpose. In this project, this studio should be extended with the possibility of recording from personal devices. For this purpose, a system should be created which acts as an external HDMI display for the personal device and takes care of recording and post-processing of the recordings (for details see slides).";Webanwendung, Lokal ausgeführte Software (Windows);Flexibel;;Intern
38;Implementing 3D Visualization for Python-Based Physics Simulations;Fabio Muratore;Intelligent Autonomous Systems (IAS);"The goal of this Bachelor Praktikum is to implement (existing) 3D rendering software for Python-based software framework (https://github.com/famura/SimuRLacra) which is tailored to reinforcement learning from randomized physics simulations. 

In this project students are asked to review possible software choices (requirements, compatibility with the existing framework, license), and connect the existing simulations to the new visualization tool. The current solution (VPython) is suboptimal for many reasons, and shall be replaced with a solution that for example looks like the visualization in MuJoco (GLFW-based).

The students only need very little understanding of physics (simulations).

Finally, the resulting code needs to be tested using pytest and documented using sphinx (both are easy to get into).";Lokal ausgeführte Software (Plattformunabhängig);Python;pytest;Open Source
39;LiGround - A mordern Chess Varaint Analysis GUI for the 21st century;Johannes Czech;Artificial Intelligence and Machine Learning Lab (AIML Lab);"The goal of this project is to develop a cross-plattform chess variant analysis vue.js web GUI which is exported to the desktop using electron.js. The software consists of three main components:
1) The web GUI which handles all user interactions.
2) The server which handles the engine communication via stdin/stdout and GUI communication via WebSockets.
3) The chess engine which evaluates the requested position.

A running prototype has been implemented already (see slides). The code of the prototype will be made available.
The task of the Bachelorpraktikum is to implement new features (see slides). If the participants are able to finish all items before time, a tournament chess engine mode can be added, too.
Most of the tasks can be worked on in parallel.
The software heavily makes use of free open-source assets from lichess.org and the vue.js library.
All the chess logic will be handled by the ffish.js library which is a WebAssembly library based on Fairy-Stockfish.
If additional functionality might be required, the participants may add new methods to ffish.js in C++ and recompile the library.";Webanwendung, Serverbackend, Lokal ausgeführte Software (Plattformunabhängig);C/C++, Javascript/Typescript/Coffeescript;Vue.js, Vuex, Electron.js, ffish.js, Websocket, Webassembly, ChessgroundX;Open Source
40;Transparent Skills Alignment Mechanism - CV & Interview Wizard;Dr. Michael Nofer;Ubiquitous Knowledge Processing Lab;"Entwicklung einer Lösung, die den Transparent Skills Alignment Mechanism unterstützt. Dabei handelt es sich um einen Software-basierten Service im Bereich der Personalauswahl.

Es fallen u.a. die folgenden Teilaufgaben an:

- Implementierung eines Annotationstools, das die Markierung und Erklärung von Textpassagen im Lebenslauf ermöglicht
- Entwicklung einer Funktionalität zur Aufzeichnung von Interviews über Voice, Video und Chat  
- Anbindungen des Systems an mindestens 2 Bewerbermanagementsysteme (ATS)";Webanwendung;Python, Sonstiges;Django, Bootstrap, Github;Comercial
41;Transparent Skills Alignment Mechanism - Decision Heatmap;Dr. Michael Nofer;Ubiquitous Knowledge Processing Lab;"Entwicklung einer Lösung, die den Transparent Skills Alignment Mechanism unterstützt. Dabei handelt es sich um einen Software-basierten Service im Bereich der Personalauswahl.

Es fallen u.a. die folgenden Teilaufgaben an:

- Visualisierung der Entscheidungsalternativen durch eine Matrix mit Hilfe geeigneter Algorithmen (z.B. Outranking)
- Modellierung der sogenannten Essential Skills (Gewichtung, Must Have, etc.) und deren Mapping auf verschiedene 
  Bewertungsskalen (z.B. Testanbieter)
- Anbindungen des Systems an mindestens 2 Bewerbermanagementsysteme (ATS)";Webanwendung;Python, Sonstiges;Django, Bootstrap, Github;Comercial
42;CogniCrypt Integrator Plugin;Dr. Krishna Narasimhan Murali;Software Technology Lab;"CogniCrypt(https://www.eclipse.org/cognicrypt/) is an open-source, Eclipse based platform that helps developers avoid misuses of cryptographic APIs. With CogniCrypt, developers can generate example code to perform cryptographic tasks, or check for misuses in existing code. CogniCrypt currently supports code generation for tasks from the JCA API. We would like it to be extensible so that custom tasks can be integrated. The envisioned integrator will take as input files required to support the custom cryptographic task and dynamically extend the code-generator plugin to include the desired task. The project members will be expected to build an interface of useful file operations on top of the Eclipse plugin development environment that are stable across operating systems, and platforms. This interface shall then be used to implement the Integrator. The team will be guided by one of the maintainers of the CogniCrypt project. The project team will have at their disposal access to a reference proof-of-concept implementation of the Integrator, and to the development team of CogniCrypt through the official slack channel. An ideal project team should have working knowledge of Java, and willingness to read through large code-bases.
 
A tutorial of CogniCrypt and the envisioned Integrator is available here: https://youtu.be/vOZKN8yQcAY";Lokal ausgeführte Software (Plattformunabhängig);Java;Eclipse Plugin development;Open Source
43;Exam Grading Support System;Max Maass;Secure Mobile Networking Lab;"Our exams usually have multiple components that count into the final grade (exam points, grade bonus, and sometimes a separate project that also gives points for the exam) that have to be combined from multiple sources (TUCaN, Moodle, ...). We are looking for a web-based exam grading support system that can combine data from these sources, match students by name (including resolving inconsistent names), support us in conveniently entering exam points, and generate the final grades, including the files required to upload them to TUCaN (basically, CSV files).

It will be important to figure out an efficient way of entering the points for the exam, as this takes the lion's share of the work. A smart autocompletion system based on Matrikelnummer and name will be required, which may (depending on your implementation) require dynamic requests to the server. So, some experience with programming interactive websites is required. Additionally, since we are talking about a grading system, extensive testing (including automated test cases) is needed - we can't afford any mistakes here :).

Requested technology: Web application, ideally using Django (Python), other frameworks can be discussed.";Webanwendung;Python, Flexibel;;Not decided yet
44;"Implementing the Long-term Storage Architecture ""ELSA""";Philipp Muth;Security Engineering;In this project you will be asked to provide an implementation of the secure long-term storage system ELSA. ELSA implies three independent parties running in parallel: a client, an evidence service and a set of shareholders. For each of those, a restful API has to be rigorously defined, implemented and of course tested for stability. Furthermore local data storage will have to be designed and implemented.;Lokal ausgeführte Software (Linux), Lokal ausgeführte Software (Windows);Java;jca;Not decided yet
45;Entwicklung eines Moduls für die statistische Auswertung und Visualisierung von größeren Datenbeständen;Christian Preusche;Institut für Flugsysteme und Regelungstechnik;Im Rahmen des Projekts soll ein Modul in Python für die statistische Auswertung von strukturierten Daten entwickelt werden. Ein weiteres Modul soll für die Visualierung der Ergebnisse auf einer Weboberfläche implentiert werden. Beide Module sollen in einer bestehende Webanwendung (Python-Flask) eingebunden werden.;Webanwendung, Serverbackend;Javascript/Typescript/Coffeescript, Python;;Noch nicht entschieden
46;Web2Print für Glückwunschkarten im WYSIWYG-Editor;Lukas Grätz;Software Engineering;"Das Thema ist ""Web2Print für Glückwunschkarten im WYSIWYG-Editor"". Dabei sollen Klappkarten verschiedener Größe und teilweise schon vorgedruckten Motiven in schöner Schrift beschrieben werden, hinzu kommen dann noch Logos, Fotos etc. Die fertige Open Source Webapplikation soll frei zugänglich sein, auch die erstellten PDFs (alternativ z.B. SVGs) sollen kostenlos zum Downloaden sein.

Nur hinter dem Verkauf der Karten selbst steht das kommerzielle Interesse, konkret der kleine Verlag https://kettcards.de . Die PDF mit Karteneindruck soll über eine Schnittstelle hochgeladen werden, das fertige Produkt kommt dann per Post.

Was passt an existierender Software nicht?
* Nicht Kostenlos
* Nicht Open Source
* Nicht WYSIWYG
* Nicht Farbecht (gedruckt wird ja nicht in RGB, sondern CMYK plus Sonderfarben)
* Keine Schnittmarken in PDF
* Keine schönen Schriftarten
* Kartenformate nicht unterstützt";Webanwendung;Javascript/Typescript/Coffeescript, Flexibel;;Open Source
47;Blockchain Payment App;Hendrik Amler;Chair of Applied Cryptography;Enhance a currently existing Blockchain payment app that uses Perun Payment Channels (https://perun.network). For more information please check the attached PDF.;Android App, iOS App;Java, Sonstiges;Flutter;Open Source
48;Blockchain payment showcase;Hendrik Amler;Chair of Applied Cryptography;Develop a flashy showcase to visualize fast blockchain micropayments using the go-perun SDK (github.com/perun-network/go-perun) and Raspberry PIs using sensors, LEDs or other hardware.;Kommandozeilenprogramm, Eingebettete Systeme;Flexibel;;Open Source
49;Efficient job scheduler for deep-learning training;Arya Mazaheri;Parallel Programming Laboratory;"Training deep-learning (DL) models require an extensive amount of time and computing resources, as the model development process involves testing various networks. Only after selecting the right network for the given AI job and tuning hyper-parameters, we can achieve a robust DL model.
Within this project, we aim to accelerate and facilitate the training process by developing an efficient job scheduler tailored for DL jobs. Docker containers facilitate the portability of the DL training code. With Kubernetes, we orchestrate the execution of containers and accelerate them using a customized scheduler.
We have already developed a prototype scheduler that supports MXNet and we plan to support more frameworks such as PyTorch and Tensorflow. Adding job preemption, checkpointing, and scalability are among the foreseeable tasks within this project.";Serverbackend;Python;Kubernetes, Docker, Horovod;Not decided yet
50;Customizable Contracts on and off the Chain: Workflow-Editor für Hyperledger Fabric;Sebastian Linsner;PEASEC - Wissenschaft und Technik für Frieden und Sicherheit;Das Produkt, welches im Praktikum umgesetzt werden soll, ist ein Editor, welcher aus verschiedenen Basiskomponenten lauffähige Smart Contracts zusammenstellen kann. Diese dienen dem Datenaustausch zwischen mehreren Parteien und sollen diverse Datenschutz-Auflagen erfüllen. Die möglichen Anwendungsfälle reichen von komplexen B2B-Vereinbarungen bis hin zur Planung einer Grillparty unter Freunden. Dabei sollen verschiedene Features von Hyperledger Fabric genutzt werden. Zum Testen des Editors sollen ein Demonstrator entwickelt werden und leichtgewichtige Test durchgeführt werden.;Webanwendung, Lokal ausgeführte Software (Linux);Javascript/Typescript/Coffeescript, Python;Hyperledger Fabric (und alle dependencies);Noch nicht entschieden
51;Ein Framework für Virtuelle Trainer: OpenCodex.jl;Jan Peters;FG Intelligente Autonome Systeme;"Die Art- und Weise wie Vorlesungen und Übungen heutzutage genutzt werden um Informatik-Studierende zu unterrichten ist nicht mehr zeitgemäß: Es wird ein statisches ""Buch"" in der Vorlesungen komprimiert verabreicht und dann die praktische Nutzung durch Übungen ohne Rücksicht auf das Verständnis des Studierenden verabreicht. Erstaunlicherweise haben die vielen modernen Formen der e-Lehre fast gar keine Verbesserung gebracht! Z.B. die sogenannte Revolution der Massive Open Online Courses (MOOC) hat nur zu einer Übertragung des klassischen Formates die digitale Welt geführt und ist meist eher ermüdend als hilfreich. 

Seitdem ich Informatik-Student war - und erst recht seitdem ich Informatik-Professor geworden bin, träume ich von einem Buch, was sich an meine Studierenden anpasst! Ein Buch, dass sich selber inkrementell aufbaut und sich dabei an die Studierenden automatisch anpasst. Ein Buch, dass sich an allen wichtigen Stelle durch Fragen so ausprägt, dass immer auf den aktuellen Lernzustand eingegangen wird. Ein Buch, welches voll elektronisch ist und virtuelle Experimente z.B. mit simulierten Robotern erlaubt. Ein Buch, welches sowohl mathematische Formeln als auch Programmierung von kleinen Beispielen (in der Programmiersprache Julia) als Wissenstandstest verwendet. Ein Buch, mit jeder Menge executable Code wie ein Jupyter Notebook. Ein Buch, welches den praktischen Spaß in die sonst eher trockene Vorlesung ""Computational Engineering"" bringen kann.";Webanwendung, Serverbackend;Sonstiges;Julia;Open Source
52;StoryTec Web-Editor zur Erstellung von spielerischen Lernmodulen in der Lehre;Stefan Göbel;Multimedia Kommunikation;"Im Projekt soll eine Web-basierte Autorenumgebung zur Erstellung von spielerischen Lernmodulen in der Lehre entwickelt werden. Dabei soll React eingesetzt werden.
Die Autorenumgebung soll folgende Editoren und Komponenten anbieten:
- Story Editor zur graphisch-interaktiven Strukturierung der spielerischen Lernanwendungen
- Stage Editor mit Templates für verschiedene Interaktionsformen/Module, bspw. Multiple Choice, Lückentext, Puzzle
- (opt.) Knowledge Space Editor zur Visualisierung von logischen Abhängigkeiten zwischen spielerischen Lernmodulen
- Backend zur Datenhaltung und Lernfortschrittsdokumentation
- Integration in Moodle";Webanwendung;Java;React;Open Source
53;Enhancing WLAN roaming on OpenWrt;Ian Bierlich;Freifunk Darmstadt / HG Chaos;Goal of the project is to implement a system that assists wireless clients to roam in a multi-AP environment.;Eingebettete Systeme;C/C++, Sonstiges;OpenWrt;Open Source
54;Quantifizierung des Internetsuchprozesses durch Computer Vision;Björn Mattes;Pädagogische Psychologie;"Das Projekt ist im Fachbereich Psychologie angesiedelt und zielt darauf ab, die Informationskompetenz von Personen bei der Internetsuche zu quantifizieren. Ziel ist es, Informationen aus bereitgestellten Videomitschnitten von Internetsuchen mittels Computer Vision zu automatisieren. Das Projekt ist wichtig, da die Informationskompetenz, also das adäquate formulieren von Suchanfragen, das Selektieren und gezielte Verarbeiten von Informationen und die Bewertung der Relevanz oder der Qualität von gefundenen Informationen eine entscheidende Fähigkeit des 21. Jahrhunderts darstellt, es aber noch nicht gut erforscht ist, was diese Informationskompetenz in Websuchen ausmachet.

Bisher wurde die Analyse des Internetsuchprozesses am Fachbereich für Psychologie entweder mittels der Aufnahme von Logfiles in kombination mit der Browserhistory auf den Laborcomputern vor Ort ausgeführt. Neben dem Sammeln der Logfiles wurden alterativ händische Videoannotation von den Bildschirmaufzeichnungen (Screen-Capturing) des Internetsuchprozesses von Annotatoren durchgeführt. Bei den Logfiles limitiert sich die Informationsdichte auf vordefinierte Bereiche (e.g. Anzahl der Webseiten, Anzahl der Suchbegriffe oder Suchanfragen). Spätere Nachuntersuchungen von anderen Prozessparametern sind hier nicht möglich. Bei der händischen Annotation der Videodatein ist der Arbeitsaufwand sehr hoch. 

Durch die Coranapandemie sind Vor-Ort-Untersuchungen im Labor nur noch sehr eingeschränkt möglich. Deshalb sollen Personen auf ihren privaten Geräten an Onlineuntersuchungen des Fachbereichs für Psychologie teilnehmen, bei denen wir außerdem den Internetsuchprozess aufzeichnen wollen. Hier spielen jedoch Privacybedenken der Versuchspersonen eine große Rolle, welche die die Akzeptanz für die automatisierte aufzeichnung von Log-files stark einschränken. Sogenannte ""Spysoftware"" oder ""Mitarbeiterüberwachungssysteme"" müssen aufgrund dessen, dass die Akzeptanz in der Bevölkerung nicht gegeben ist, unbedingt vermieden werden. Unsere Befragungen ergaben jedoch eine Bereitschaft von selbstgesteuerten Videoaufzeichnungen des Suchverlaufs gegenüber dem Einsatz von Überwachungssoftware. 

Im Folgenden eine vorläufige Definition von der Highlevelfunktionalitäten im Praktikum zu erstellenden Systems.
Input:
* Videoaufzeichnungen von Websuchen mittels Internetbrowser (Screencapturing).
Output:
* URLs und Suchbegriffe während der Websuche.
* Time on Tabs und Tab-wechsel: Die Zeit, welche auf verschiedenen URLs verbraucht wurde.
* Prozessanalyse des (Makro-)Suchprozesses, e.g. Informationssuche, Informationsaufnahme & -verarbeitung, Informationsproduktion.
* Optional: Weitere Prozessparameter mit feinerer Granularität können nach Absprache operationalisiert und quantifiziert werden.

Userstory: Die Software soll Videodateien von Internetsuchprozessen (Screencapturing) analysieren und die Resultate in einem lesbaren Format ablegen.

Optional:
In einem zweiten Schritt soll die Software auf einer Webanwendung operationell bereitgestellt werden. Hierfür sollen existierende Open-source Frameworks passend konfiguriert auf einem bereitgestellten Debianserver integriert werden.
Userstory:  Die User sollen Videodateien von Internetsuchprozessen (Screencapturing) in einer Webandwendung hochladen können. Die Software soll den Internetsuchprozess der Videodateien analysieren und die Resultate in einem lesbaren Format ablegen. Weitere Vertiefungsmöglichkeit: Die Ergebnisse der der Prozessanalyse können den Usern grafisch aufbereitet und dargestellt werden.";Lokal ausgeführte Software (Plattformunabhängig);Python, Flexibel;;Open Source
55;ruins and beyond!;Prof. Dr. Franziska Lang;Fachbereich Architektur - Fachgebiet Klassische Archäologie;"Die Vorlesung „Architektur und Städtebau der Antike“ (BA, 3. Sem.) soll in ein zeitgemäßes digitales Format überführt werden. Hierfür möchten wir eine semi-interaktive digitale Wissensplattform zur Architekturgeschichte der Antike als Webanwendung aufbauen, mit der die Studierenden auf der Basis des zu Verfügung gestellten Materials die Lehreinheiten selbstbestimmt kombinieren und absolvieren können. Auch soll das Tool einen inhaltlichen Austausch zwischen den Studierenden und Lehrenden ermöglichen. 
Die bislang 13 1,5-stündigen Vorlesungen, die einen chronologischen Überblick über den Wandel der Architektur in der Antike zum Gegenstand haben, werden zu 72 15-minütigen Videos („lecture modules“) umgewandelt und durch einen Bauwerkskatalog bestehend aus 220 „Steckbriefen“ mit grundlegenden „characteristcs“ ergänzt. 
Anhand des Web-Tools „ruins and beyond!“ werden diese Daten auf unterschiedlichen Wegen miteinander verküpft:
1. Zeitstrahl
Auf dem Zeitstrahl werden die Einzelbauten mit ihren „characteristcs“ und zugehörigen Vorlesungsvideos über Bild-Buttons abrufbar gemacht 
2. ThemenGrid
Im ThemenGrid sollen die Vorlesungsvideos (""lecture modules"") thematisch abgefragt und zusammengestellt werden.
Alle Daten sollen über eine Datenbank miteinander kombinierbar sein.

Beispiel: 
Eine Studentin interessiert sich für Bauten mit Versammlungsfunktion in der Zeit vom 5. bis zum 3. Jh.v.Chr.; über die Suchfunktionen des Themengrids kann sie die entsprechenden Bauten finden. 

Unsere Vorarbeiten
Die benötigten Daten, die Steckbriefe der Bauten als Exceltabelle sowie die digitalen Vorlesungsvideos, liegen bereits vor.

BP Erfolg: E-Teaching-Award 2015 
Unser Fachgebiet hat bereits das Lernspiel „Toyblocks“ über das BP entwickelt, das 2015 mit dem E-Teaching-Award Preis der TUDa ausgezeichnet wurde.

Über eine Zusammenarbeit würden wir uns sehr freuen.
F. Lang, H. Svenshon, J. Kreiser, S. Wetherington";Webanwendung;Flexibel;;Noch nicht entschieden
56;Botnet Monitoring System 2.0;Leon Böck;Informatik / Telekooperation;"Das Botnet Monitoring System (BMS) ist eine aus Front- und Backend bestehende Softwarekomponente zum Überwachen von Botnetzen. Sogenannte Crawler und Sensoren, werden weltweit eingesetzt und speisen die gesammelten Informationen zurück an BMS. 
Ziel des Bachelorpraktikums ist es, den Funktionsumfang von BMS zu erweitern, um die Daten mit verschiedenen Algorithmen zu analysieren und anzureichern. 
Ein Algorithmus soll beispielsweise automatisiert Crawler und Sensoren anderer Forscher erkennen um die erhobenen Daten zu bereinigen.";Webanwendung, Serverbackend;Python, Sonstiges;Django, Grafana, Timescale / PostgeSQL;Noch nicht entschieden
57;Few-Shot Machine Learning on the Example of Evolution of Debates;Tilman Beck;FB20;"In this work we want to democratize the training and analysis of deep transformer-based neural models for non-technical users. Therefore, we want to integrate an existing library (AdapterHub.ml) into Google Colab and visualize predictions of those fine-tuned models on new data.
As a primary use-case for this project we will focus on the analysis of evolution of debates and
public opinion in social media.";Webanwendung, Serverbackend;Javascript/Typescript/Coffeescript, Python;PyTorch, AdapterHub, Flask, Streamlit.io;Open Source
58;A toolkit for evaluation metrics;Steffen Eger;Natural Language Learning Group;"Evaluation in NLP is crucial for adequately measuring progress. Faulty evaluation leads to preference for inferior systems.
Evaluation in text generation (such as summarization or Machine Translation) is particularly difficult because the number of possible natural language texts is by definition unbounded. Traditionally, evaluation in MT and summarization compares a system output to a human reference. Human references are costly, because they require a human expert.

In this project, we will concern ourselves with reference-free evaluation for summarization and MT, which directly compares a source input to a system prediction, without the need for human references. 

The goal of the project is to:
- assemble datasets for reference-free MT and summarization evaluation
- assemble systems that perform reference-free MT and summarization evaluation
- integrate those systems in a common framework
- integrating functionality that allows to aggregate the evaluation scores of different systems";Kommandozeilenprogramm, Lokal ausgeführte Software (Linux);Python, Sonstiges;Tensorflow, Keras, PyTorch, etc.;Noch nicht entschieden
59;FloorPlanMatch Frontend;Anton Savov;Fachgebiet Digital Design Unit (DDU) am Fachbereich Architektur;"FloorPlanMatch ist ein Forschungsprojekt des Digital Design Unit am Fachbereich Architektur mit dem Ziel einer Ausgründung. Aktuell beschäftigen wir uns mit der Ausarbeitung des Geschäftsmodells sowie der Entwicklung unseres Produktes. 2019 wurde unsere Idee mit dem Hessen Ideen Stipendium ausgezeichnet. Wir sind drei Personen im Team, zwei Architekten und ein Betriebswirtschaftler. 

Wir entwickeln eine digitale Hausplanungsplattform, auf der Bauherren zusammen mit ihrer Familie ihr Wohnkonzept festlegen und, unterstützt von Algorithmen aus einer Datenbank, einen passenden Grundriss für ihr Grundstück finden können.

Das Ziel des Bachelor Praktikum Projekts ist die Entwicklung des WebApp-Frontends unseres MVPs. Die Aufgabe der Studierenden besteht darin, die Hauptaspekte der User Experience für alle Nutzergruppen darzustellen: Bauherren, Architekten und Bauunternehmen.

Die Frontend-Webanwendung muss die Benutzerkonten inklusive der Präferenzen der Bauherren mit der dafür benötigten Datenbank verwalten und mit unserer API kommunizieren können, welche die Funktionalität bereitstellt. Wir werden dafür grafische Mockups der Benutzeroberfläche zur Verfügung stellen. Bisherige Frontend-Tests wurden mit Bootstrap, Vue.js und D3.js durchgeführt.

Unsere API stellt Grundrisse mit den vom Nutzer gewünschten Eigenschaften bereit und liefert außerdem verschiedene Informationen für den jeweiligen Grundriss, die für die Erstellung der User Experience im Frontend benötigt werden.
Die API hierfür ist in Python/Flask geschrieben und wird den Studierenden zur Verfügung gestellt. Arbeiten an der API werden von unserer Seite während der Projektlaufzeit des BP kontinuierlich weitergeführt, d.h. die Funktionalität wird erweitert, aber auch das Feedback der Studierenden kann in die API implementiert werden, um die Interaktion mit dem Frontend zu verbessern.

Die technologische Grundlage hierfür wurde von Anton Savov in den letzten Jahren im Zuge seiner Doktorarbeit entwickelt.
Abhängig vom Grad der Einbindung in die Funktionsweise unserer API halten wir uns offen, von den Studierenden einen unterzeichneten Geheimhaltungsvertrag zu verlangen.

Das DDU war schon in der Vergangenheit oft ein Auftraggeber für das BP des Fachbereich Informatik und wir sind von diesem interdisziplinären und praxisorientierten Format begeistert. Wir sind überzeugt, den Studierenden mit unserer persönlichen Betreuung und wertvollen Erfahrungen eine gute Grundlage für ein erfolgreiches BP anbieten zu können.";Webanwendung;Javascript/Typescript/Coffeescript;Vue.js oder ähnliches, d3.js, CI/CD (Heroku/Netlify oder ähnliches);Comercial
60;Visualization of Entities and Aspects in Innovation-driven Processes;Johannes Daxenberger, Benjamin Schiller;UKP;The project will focus on the visualization of entities and aspects of argumentative sentences. APIs to extract entities and aspects are available. Arguments have to be clustered by the extracted aspects/entities or with an independent clustering algorithm. The clusters of arguments will be visualized (e.g. via D3.js) and integrated as a module in an existing dashboard for argument search. Nodes in the graph are represented by aspects/entities. Edges represent the lexical distance to the arguments of other clusters (e.g. via sentence embeddings and a distance measure like cosine distance). The computation of the graph will be done in real-time.;Webanwendung, Serverbackend;Javascript/Typescript/Coffeescript, Python;D3,  Flask, NLTK/SpaCy;Comercial
61;Messung von Smartphone-Nutzung und ihrem Kontext;Julius Frankenbach;Psychologie;"Psychologische Risiken von intensiver Smartphone-Nutzung sind ein hochaktuelles, vielfach untersuchtes Thema. Allerdings sind solche Studien oft methodisch unzureichend, weil sie sich auf wenig verlässliche, allgemeine Selbstberichte über die Nutzung stützen (z.B. ""Wie viele Stunden am Tag nutzen Sie Ihr Handy?""). Darum soll in diesem Projekt in Projektteil 1 eine Android App inklusive Back-End entwickelt werden, mit der Smartphone-Nutzung zu Forschungszwecken exakt aufgezeichnet werden kann (App-Nutzung, Unlocks, Sensordaten, etc.). Außerdem sollen in Projektteil 2 zusätzliche Kontextinformationen über die Nutzung durch Echtzeit-Notifikationen (z.B. ""Nutzen Sie Ihr Smartphone gerade zum Lernen?"") und einen retrospektiven Tagebuchansatz erfasst werden (z.B. ""Sie haben heute von 13:31 bis 14:11 bis App Google Chrome verwendet. Was war das Hauptziel dieser Nutzungs-Session?""). 

Für Projektteil 1 kann das AWARE Framework verwendet werden (https://awareframework.com/). AWARE umfasst einen Android-Client bzw. Library zur Messung von Smartphone-Nutzung und Sensordaten, sowie einen REST-Server zur Kommunikation von Client und Datenbankserver (MySQL, Postgresql). 

Für Projektteil 2 soll auf Basis der Library des AWARE-Clients eine neue App (Java/Kotlin) entwickelt werden, die über den vorkonfigurierten Client hinaus Features zur Verfügung stellt (d.h. Messung von Kontextinformationen in Echtzeit und retrospektiv, wie oben beschrieben). 

Tools und Patterns für Kommunikation, Versionskontrolle, Projektmanagement, etc.  können individuell abgestimmt werden. 

Die fertige App inkl. Back-end soll im Sommersemester 2021 für eine empirische Studie zur Smartphone-Nutzung im Studienalltag eingesetzt werden.

Hinweise zum Datenschutz: Diese Forschung findet im Rahmen des Graduiertenkollegs „ Privacy and Trust for Mobile Users” statt. Privatheit und Sicherheit der Studienteilnehmer (d.h. der zukünftigen User der App) stehen dementsprechend an erster Stelle. Darum sollen von Anfang an privacy-relevante Aspekte wie Anonmyisierung und Security berücksichtigt werden. Bei zukünftigen Studien werden die Teilnehmer umfassend über die Studie aufgeklärt und um ihr Einverständnis gebeten („informed consent“). Alle Studien werden vorab von der Ethikkommission der TU Darmstadt geprüft und beurteilt.";Android App, Serverbackend;Java, Flexibel, Sonstiges;AWARE Open-source Context Instrumentation;Open Source
62;Interactive Resarch Exploration;Nadja Geisler;Data Management (Informatik);"Ein essenzieller Teil von Forschung ist es, bestehende Arbeiten aus dem gleichen Gebiet oder mit relevanten Beiträgen zu finden. Durch die vielfältigen Möglichkeiten das gleiche Thema sprachlich zu beschreiben, ist es mit einer Stichwortsuche wie zum Beispiel Google Scholar verhältnismäßig schwierig relevante Veröffentlichungen, zu einem gegebenen Thema zu finden, geschweige denn verwandte Arbeiten in verschiedene Richtungen zu erkunden.

In diesem BP soll eine Webanwendung (Django) erstellt werden, die die existierenden Daten aus offenen Quellen zu publizierten Forschungsarbeiten nutzt, um es zu ermöglichen von einer Arbeit ausgehend interessante weitere Arbeiten zu erkunden und umliegende Gebiete visuell darzustellen.";Webanwendung;Python;Django;Open Source
63;Formular-Editor mit Webtechnologien;Franz Kuntke;PEASEC;"Die Software, die im Praktikum entwickelt werden soll ist ein eigenständiger Editor für die Entwicklung von interaktiven Formularen.
Im Forschungsprojekt GeoBox-Infrastruktur haben sich Formulare als wichtige Elemente für betriebliche Abläufe in der Landwirtschaft herauskristallisiert. Entsprechend soll ein möglichst nutzerfreundlicher Editor die End-Anwender bemächtigen selbst Formulare für eigene Zwecke zu entwickeln. Zwei technische Besonderheiten der interaktiven Formulare sind die Einbettung bestehenden Ontologien und Berechnungsvorschriften.
Die Ausführungsumgebung der Formulare soll hierbei nicht Bestandteil des Praktikums sein, sondern wird bereits separat im Projekt GeoBox-Infrastruktur entwickelt.";Webanwendung;Javascript/Typescript/Coffeescript;;Noch nicht entschieden
64;Erweiterung der Datenbank der Versuche der Vorlesungsassistenz Physik;Erik Kremser;FB5 - Physik;"Erweiterung der bereits bestehenden Datenbank der Versuche der Vorlesungen Physik (https://linus.iap.physik.tu-darmstadt.de) um eine Datenbank, mit der die Informationen und notwendigen Dateien zur Bearbeitung und Erweiterung bestehender Versuche und Planung neuer Versuche gesammelt und arrangiert werden können.
Überarbeitung der bestehenden Datenbank zur besseren Anpassung der Handhabung an die Arbeitsabläufe in der Vorlesungsassistenz und der Wünsche der Dozierenden, die die Datenbank zur Auswahl der Versuche, die sie in ihren Vorlesungen durchführen möchten, nutzen.";Webanwendung, Sonstiges;Flexibel;;Open Source
65;Kontrolliere einen Avatar;Wolfgang Heenes;Dekanat;"Erstelle eine einfach bedienbare Lösung, die sich in einer remoten Umgebung frei bewegen kann und dort kommuniziert.
Vgl. https://www.youtube.com/watch?v=WjWfur9at2s

Plattformvorgabe:
- Roboter: ein aus LEGO Mindstoms (EV3) zu bauender Avatar
- Avatar-Display: Android Gerät oder Win10 Rechner (beide mit WLan+Bluetooth)
- Fernsteuergerät: Android Gerät oder Win10 Rechner";Webanwendung, Android App, Serverbackend, Lokal ausgeführte Software (Windows);Flexibel;;Open Source
66;Die erste Sammlung digitalisierter Insekten;Dr. Michael Heethoff;Biologie;Durch die Entwicklung des Darmstädter Insektenscanners DISC3D am Fachgebiet Biologie der TU Darmstadt ist es möglich Insektensammlungen in den Museen und wissenschaftlichen Einrichtungen der Erde als 3D-Modell zu digitalisieren. Dadurch wird der Entomologie zum ersten Mal die Möglichkeit geboten, auf verteilte Sammlungen digitaler Insekten zuzugreifen und mithilfe moderner Analysewerkzeuge effizient und effektiv zu untersuchen. Der Realisierung dieser Datenbank stehen die Vielfalt der Taxonomie entgegen: Die Klassifikation und weitere Informationen werden bei genadelten Insekten auf den zugeordneten Etiketten festgehalten, manche Zuordnungen sind unvollständig oder widersprüchlich. Eure Aufgabe soll es sein, ein verteiltes Datenbanksystem zu entwickeln, das sich flexibel auf die Versäumnisse früherer Generationen anpassen kann und die Möglichkeit bietet, wissenschaftliche Daten aus verteilten Archiven auf der ganzen Welt abzurufen und lokal mit zukünftigen Algorithmen zu analysieren und zu vergleichen.;Webanwendung, Kommandozeilenprogramm, Lokal ausgeführte Software (Plattformunabhängig), Sonstiges;Flexibel;;Noch nicht entschieden
67;timewarrior synchronize;Aron Eiermann;Kabisch-Lab / Computer-aided Synthetic Biology;Development of a synchronize feature for a time tracking software.;Serverbackend, Kommandozeilenprogramm, Lokal ausgeführte Software (Linux);C/C++, Python, Flexibel;;Open Source
68;Kommentar App für Research Paper, Bücher und sonstige Werke;Ulf Hamster;Berlin-Brandenburgischen Akademie der Wissenschaften, Zentrum Sprache;"Die Metadaten von Fachartikeln, Büchern und sonstige Werke werden i.d.R. auf den diversen Webseiten von Verlage, Bibliotheken oder speziellen Webseiten dargestellt und mit einem Permanent Identifier verlinkt (z.B. DOI, hdl, URN, ark). In manchen Fällen wird den Lesern dieser Werke die Möglichkeit gegeben ein Kommentar unter diesen Webseiten zu schreiben, aber i.d.R. schreckt es User ab extra einen Account für diese eine Webseite anzulegen. Unsere Persona liest wahrscheinlich viel Fachliteratur und müsste sich konsequenterweise dutzende Accounts für jede einzelne Webseite anlegen. Auf Makroebene behindert eine solche fragmentierte Marktsituation den Feedbackmechanismus zwischen Verfasser und Leser (z.B. Wissenschaftler und Praktiker) als auch den Austausch mit anderen Lesern.
Die zu entwickelnde Kommentar-App soll Lesern eine zentrale Anlaufstelle bieten, um Ihre Meinungen und Fragen über Werke zu äußern, und zwar unabhängig von den Eigenheiten der Webseiten der Herausgeber -- Kommentare sind in der App lediglich mit dem Permanent Identifier verknüpft.

Technologisch liegt der Fokus auf die Front-End Entwicklung einer offline PWA App mit Vue.js v3. Bei der Back-End Entwicklung sollen dagegegen nur die wesentliche Aspekte betont werden (z.B. Permenant Identifier) und ansonsten pragmatische Ansätze vom Team gewählt werden, um den Arbeitszeitbedarf hier niedrig zu halten (z.B. benutzte existierende REST APIs, BaaS Lösungen, Mock-Up statt full-fledge).";Webanwendung;Javascript/Typescript/Coffeescript;Vue.js v3;Open Source
69;kill Excel;Johannes Kabisch;Computer-aided Synthetic Biology;"Increased laboratory automation in the life sciences leads to increasing amounts of data, yet most laboratories are still using excel sheets to evaluate and plot this data.  Excel is not suited for science and should be used for home accounting at best.
⇒ excellent data tools for plotting (R, python) are available but too difficult for most users
We (scientists from Berkley, Seattle and Greifswald and of course Darmstadt) want you to help us change this and enable scientific plotting using Jupyter Lab for everyone.";Webanwendung, Serverbackend, Lokal ausgeführte Software (Linux);Python, R;;Open Source
70;Caffeine.build;Johannes Kabisch;Computer-aided Synthetic Biology;"Engineered organisms provide the means for tackling climate change and other sustainable development goals put forward by the UN. Engineering biology is a hard problem that can be supported through genome-scale models (GSM), i.e. mathematical models that capture the capabilities encoded in an organism’s genome. Similar to computer-aided design (CAD) software in other engineering disciplines (for example, AutoCAD in civil engineering or the automotive industry), Caffeine is an open source CAD application based on modern web technologies that puts powerful design algorithms at the fingertips of biologists and does not require programming abilities.
In this project you will alleviate the current model building bottleneck by augmenting Caffeine with model building capabilities through a combination of front- and back-end development.";Webanwendung, Serverbackend, Lokal ausgeführte Software (Linux);Python, Sonstiges;sqlalchemy/PostgreSQL, flask, Vue.js, Vuex, Vuetify, Escher;Not decided yet
71;Visualiser for logs of robotic platform;Aron Eiermann;Kabisch-Lab / Computer-aided Synthetic Biology;Prototype visualisator for logs of our robotic platform.;Webanwendung;Javascript/Typescript/Coffeescript;;Open Source
72;CollabCoursebook: LaTeX-Support;Benjamin Hättasch;FG Data Management;"Im letzten BP ist eine Plattform für das kollaborative Erstellen und Bearbeiten von Scripten entstanden. Zur Zeit ist es nur möglich, Plaintext, Bilder oder PDFs hochzuladen oder einzugeben. Im Rahmen dieses Projekts soll eine native Unterstützung für LaTeX implementiert werden.

Der aktuelle Stand der Software kann unter https://github.com/DataManagementLab/collab-coursebook gefunden werden.";Webanwendung;Python;Django;Open Source
73;Bon²;Benjamin Hättasch;FG Data Management;"In diesem Projekt soll eine schlanke Webanwendung für geteilte Ausgaben entstehen -- für die man einfach nur den Kassenzettel fotografieren und mit dem Finger die Posten der unterschiedlichen Personen markieren muss.

Der Quellcode der entstandenen Applikation soll unter der AGPL veröffentlicht werden. Das Backend der Webseite soll in Python umgesetzt werden, wobei Django als Framework empfohlen wird. Abhängig von Vorkenntnissen sind aber auch andere Frameworks (z.B. Flask) denkbar.";Webanwendung;Javascript/Typescript/Coffeescript, Python;Django + Django Rest Framework (empfohlen);Open Source
